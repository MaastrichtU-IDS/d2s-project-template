PREFIX x2rm: <http://ids.unimaas.nl/xml2rdf/model#>
PREFIX x2rd: <http://ids.unimaas.nl/xml2rdf/data/>
PREFIX d2s: <https://w3id.org/d2s/vocab/>
PREFIX ido: <http://identifiers.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX obo: <http://purl.obolibrary.org/obo/>
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX bl: <https://w3id.org/biolink/vocab/>
INSERT {
  GRAPH <?_output> {

    ?drugUri a bl:Drug ;
      bl:id ?drugCurie ;
      bl:name ?name ;
      bl:has_chemical_formula ?molecularFormula ;
      # Put all descriptive textual infos about the drug as description
      bl:description ?description ;
      bl:description ?drugIndication ;
      bl:description ?synthesisReference ;
      bl:description ?pharmacodynamics ;
      bl:description ?mechanismOfAction ;
      bl:description ?toxicity ;
      bl:description ?metabolism ;
      bl:description ?absorption ;
      bl:same_as ?casNumberUri ;
      bl:same_as ?uniiUri ;
      bl:same_as ?inchikeyUri ;
      bl:same_as ?inchiUri ;
      bl:synonym ?smiles ;
      bl:category ?drugGroupUri ;
      bl:category ?drugStateUri .
      # TODO: use bl:filler instead of category?

    ?drugStateUri a bl:OntologyClass ;
      bl:id ?drugStateUri ;
      bl:name ?drugState .

    ?drugGroupUri a bl:OntologyClass ;
      bl:id ?drugGroupUri ;
      bl:name ?drugGroup .

  }
} WHERE {
  SERVICE <?_service>  {
    GRAPH <?_input> {

      # Get primary DrugBank ID of drug
      ?drugObj x2rm:child_drugbank-id [ 
        x2rm:attribute_primary "true" ; 
        x2rm:hasValue ?drugbankId 
      ] .
      BIND(iri(concat("https://identifiers.org/drugbank:", ?drugbankId)) AS ?drugUri)

      OPTIONAL{ ?drugObj x2rm:child_name [ x2rm:hasValue ?name ] . }
      OPTIONAL{ ?drugObj x2rm:child_description [ x2rm:hasValue ?description ] . }
      OPTIONAL{ 
        ?drugObj x2rm:child_cas-number [ x2rm:hasValue ?casNumber ] . 
        BIND ( iri(concat("https://identifiers.org/cas:", ?casNumber)) AS ?casNumberUri )
      } 
      OPTIONAL{ 
        ?drugObj x2rm:child_unii [ x2rm:hasValue ?unii ] . 
        BIND ( iri(concat("https://identifiers.org/unii:", ?unii)) AS ?uniiUri )
      }
      OPTIONAL{ 
        ?drugObj x2rm:child_state [ x2rm:hasValue ?drugState ] . 
        VALUES( ?drugState ?drugStateUri ) {
          ("liquid" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C45298> )
          ("gas" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C45299> )
          ("solid" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C45300> )
        }
      }
      OPTIONAL{ 
        # Array, e.g. Approved
        ?drugObj x2rm:child_groups [ x2rm:child_group [ x2rm:hasValue ?drugGroup ] ] .
        VALUES( ?drugGroup ?drugGroupUri ) {
          ("approved" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C25425> )
          ("vet_approved" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C25425> )
          ("investigational" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C28041> )
          ("experimental" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C28041> )
          ("withdrawn" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C70758> )
          ("nutraceutical" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C1954> )
          ("illicit" <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#C79097> )
        }
        # approved, investigational, withdrawn, vet_approved, nutraceutical, illicit, experimental
      }
      OPTIONAL{ ?drugObj x2rm:child_indication [ x2rm:hasValue ?drugIndication ] . }
      OPTIONAL{ ?drugObj x2rm:child_synthesis-reference [ x2rm:hasValue ?synthesisReference ] . }
      OPTIONAL{ ?drugObj x2rm:child_pharmacodynamics [ x2rm:hasValue ?pharmacodynamics ] . }
      OPTIONAL{ ?drugObj x2rm:child_mechanism-of-action [ x2rm:hasValue ?mechanismOfAction ] . }
      OPTIONAL{ ?drugObj x2rm:child_toxicity [ x2rm:hasValue ?toxicity ] . }
      OPTIONAL{ ?drugObj x2rm:child_metabolism [ x2rm:hasValue ?metabolism ] . }
      OPTIONAL{ ?drugObj x2rm:child_absorption [ x2rm:hasValue ?absorption ] . }

      # Get Chemical formula
      OPTIONAL{ 
        # x2rm:child_experimental-properties or x2rm:child_calculated-properties
        ?drugObj ?formulaProperties [ 
          x2rm:child_property [
            x2rm:child_kind [ x2rm:hasValue "Molecular Formula" ] ;
            x2rm:child_value [ x2rm:hasValue ?molecularFormula ] 
          ]
        ] 
      }
      # Get InChi
      OPTIONAL{ 
        # x2rm:child_experimental-properties or x2rm:child_calculated-properties
        ?drugObj ?inchiProperties [ 
          x2rm:child_property [
            x2rm:child_kind [ x2rm:hasValue "InChI" ] ;
            x2rm:child_value [ x2rm:hasValue ?inchi ] 
          ]
        ] .
        BIND( iri(concat("https://identifiers.org/inchi:", ?inchi)) AS ?inchiUri)
      }
      # Get InChi
      OPTIONAL{ 
        # x2rm:child_experimental-properties or x2rm:child_calculated-properties
        ?drugObj ?inchikeyProperties [ 
          x2rm:child_property [
            x2rm:child_kind [ x2rm:hasValue "InChIKey" ] ;
            x2rm:child_value [ x2rm:hasValue ?inchikey ] 
          ]
        ] .
        BIND( iri(concat("https://identifiers.org/inchikey:", ?inchikey)) AS ?inchikeyUri)
      }
      # Get SMILES
      OPTIONAL{ 
        # x2rm:child_experimental-properties or x2rm:child_calculated-properties
        ?drugObj ?smilesProperties [ 
          x2rm:child_property [
            x2rm:child_kind [ x2rm:hasValue "SMILES" ] ;
            x2rm:child_value [ x2rm:hasValue ?smiles ] 
          ]
        ] 
      }

      #   <property>
      #   <kind>SMILES</kind>
      #   <value>OC[C@H](O)[C@@H](O)[C@H](O)[C@H](O)C(O)=O</value>
      #   <source>ChemAxon</source>
      # </property>
      # <property>    https://identifiers.org/inchi:InChI=1S/C2H6O/c1-2-3/h3H,2H2,1H3
      #   <kind>InChI</kind>
      #   <value>InChI=1S/C6H12O7/c7-1-2(8)3(9)4(10)5(11)6(12)13/h2-5,7-11H,1H2,(H,12,13)/t2-,3+,4-,5-/m0/s1</value>
      #   <source>ChemAxon</source>
      # </property>
      # <property>    https://identifiers.org/inchikey:RYYVLZVUVIJVGH-UHFFFAOYSA-N
      #   <kind>InChIKey</kind>
      #   <value>RGHNJXZEOKUKBD-QTBDOELSSA-N</value>
      #   <source>ChemAxon</source>
      # </property>

      # <average-mass>177.2462</average-mass>
      # <monoisotopic-mass>177.126597495</monoisotopic-mass>
    }
  }
}
