name: Generate HuRI BioLink RDF using RML

on:
  workflow_dispatch:
  push:
    branches: [ master ]
    paths:
    - 'datasets/huri/**'
    - '.github/workflows/rdf-generate-huri.yml'

# TODO: use workflow variables for graph URI and SPARQL endpoint URL

jobs:
 
  generate-rdf:
    runs-on: ubuntu-latest
    # runs-on: [self-hosted, linux, X64, node2]
    # needs: download-input
    outputs:
      rdf-output: ${{ steps.stepupload.outputs.rdf_output }}

    steps:
    - uses: actions/checkout@v2

    - name: Download CSV
      run: datasets/huri/download/download.sh

    - uses: vemonet/rmlmapper-java@4.8
      with:
        mapping: datasets/huri/mapping/huri_mapping.rml.ttl
        output: rdf-huri.nt

    - name: Upload RDF output artifact
      id: stepupload
      uses: actions/upload-artifact@v1
      with:
        name: rdf-output
        path: rdf-huri.nt

  upload-rdf:
    runs-on: ubuntu-latest
    # runs-on: [self-hosted, linux, X64, node2]
    needs: generate-rdf
    
    steps:
    - uses: actions/checkout@v2

    - name: Get RDF output artifact
      uses: actions/download-artifact@v1
      with:
        name: rdf-output

    - name: Upload file to GraphDB server
      run: |
        curl -Ffile=@rdf-output/rdf-huri.nt 'http://upload.137.120.31.102.nip.io/upload?token=${{ secrets.GRAPHDB_UPLOAD_TOKEN }}'

    - name: Start GraphDB import
      run: |
        curl -X POST -u ${{ secrets.GRAPHDB_USER }}:${{ secrets.GRAPHDB_PASSWORD }} --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{"fileNames": ["upload/rdf-huri.nt"], "importSettings": {"context": "https://w3id.org/d2s/graph/huri"}}' 'https://graphdb.dumontierlab.com/rest/data/import/server/test-vincent'

    # Add step to manage versioning (delete previous graph, load new graph, generate metadata)
    # TODO: Add step to wait for GraphDB import to end

    - name: Compute and insert HCLS descriptive metadata
      uses: MaastrichtU-IDS/d2s-sparql-operations@master
      with:
        file: https://github.com/MaastrichtU-IDS/d2s-scripts-repository/tree/master/sparql/compute-hcls-stats
        endpoint: https://graphdb.dumontierlab.com/repositories/test-vincent/statements
        user: ${{ secrets.GRAPHDB_USER }}
        password: ${{ secrets.GRAPHDB_PASSWORD }}
        inputvar: https://w3id.org/d2s/graph/huri
        outputvar: https://w3id.org/d2s/metadata
        servicevar: http://localhost:7200/repositories/test-vincent

    # - name: Run RDF to HDT
    #   run: docker run rdfhdt/hdt-cpp rdf2hdt rdf-output/rdf-huri.nt hdt-huri.hdt

    - name: Run RDF to HDT
      uses: vemonet/rdfhdt-action@master
      with:
        input: rdf-output/rdf-huri.nt
        output: hdt-huri.hdt

    - name: Upload HDT output artifact
      uses: actions/upload-artifact@v1
      with:
        name: hdt-output
        path: hdt-huri.hdt
