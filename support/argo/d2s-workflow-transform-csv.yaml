apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: d2s-workflow-transform-csv-
spec:
  entrypoint: execute-workflow

  volumeClaimTemplates:                 # define volume, same syntax as k8s Pod spec
  - metadata:
      name: workdir                     # name of volume claim
      annotations:
        volume.beta.kubernetes.io/storage-class: maprfs-ephemeral
        volume.beta.kubernetes.io/storage-provisioner: mapr.com/maprfs
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi                  # Gi => 1024 * 1024 * 1024


  arguments:
    parameters:
    - name: datasetToProcess
      value: pharmgkb
    - name: downloadUsername
      value: my_download_username
    - name: graphUri
      value: https://w3id.org/data2services/graph/autor2rml
    - name: sparqlEndpoint
      value: http://node000002.cluster.ids.unimaas.nl/
    - name: sparqlRepository
      value: test
    - name: sparqlUsername
      value: import_user


  templates:
  - name: execute-workflow
    steps:
   # - - name: run-download
   #     template: d2s-download
    - - name: drill
        template: apache-drill
    - - name: run-autor2rml
        template: autor2rml
        arguments:
          parameters:
          - name: jdbcUrl
            value: jdbc:drill:drillbit={{steps.drill.ip}}:31010


  - name: d2s-download
    container:
      image: vemonet/data2services-download
      args: [ "--download-datasets", "{{workflow.parameters.datasetToProcess}}" ]
      volumeMounts:
      - name: workdir
        mountPath: /data

  - name: apache-drill
    daemon: true                        # start influxdb as a daemon
    container:
      image: vemonet/apache-drill
      volumeMounts:
        - name: workdir
          mountPath: /data # readonly?
      readinessProbe:  # wait for readinessProbe to succeed
        httpGet:
          path: /
          port: 8047
        initialDelaySeconds: 5
        #timeoutSeconds: 1

  - name: autor2rml
    inputs:
      parameters:
      - name: jdbcUrl
    container:
      image: vemonet/autor2rml
      args: ["-j", "{{inputs.parameters.jdbcUrl}}", 
      "-o", "/data/mapping.trig", "-d", "/data",
      "-b", "https://w3id.org/data2services/", "-g", "{{workflow.parameters.graphUri}}"]
      volumeMounts:
      - name: workdir
        mountPath: /data